---
interface Props {
  title: string;
  publishedAt?: Date;
  description?: string;
  href: string;
  tags?: string[];
}

const { title, publishedAt, description, href, tags } = Astro.props;
---

<a
  href={href}
  target={href.startsWith('https') ? '_blank' : '_self'}
  class="group flex cursor-ne-resize flex-col gap-2 rounded-md border border-neutral p-4 transition-all hover:border-white duration-300 hover:-translate-y-1.5 hover:ring-1 ring-[#FF480F] hover:ring-primary hover:shadow-lg hover:shadow-[#ff470f7d] hover:border-primary"
  data-astro-prefetch
>
  <div class="flex w-full justify-between gap-3 flex-row items-start">
    <p class="font-medium">{title}</p>
    <div class="flex flex-row items-center gap-2">
      {
        publishedAt ? (
          <p class="text-neutral whitespace-nowrap">
            {new Date(publishedAt).toLocaleDateString('en-us', {
              year: 'numeric',
              month: 'short',
              day: 'numeric',
            })}
          </p>
        ) : null
      }
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="22"
        height="22"
        viewBox="0 0 24 24"
        fill="none"
        stroke="#94a0a9"
        stroke-linecap="round"
        stroke-linejoin="round"
        color="#94a0a9"
        class="tabler-icon tabler-icon-arrow-up-right transition-none md:transition-all md:duration-300 md:group-hover:translate-x-1"
      >
        <path d="M17 7l-10 10"></path><path d="M8 7l9 0l0 9"></path>
      </svg>
    </div>
  </div>
  <div class="flex flex-col text-neutral-500">
    <p class="font-medium">Tech Stack</p>
    {
      tags ? (
        <div class=" flex flex-row flex-wrap gap-2">
          {tags.map((item) => (
            <div class="badge badge-neutral">{item},</div>
          ))}
        </div>
      ) : (
        <p class="truncate">{description}</p>
      )
    }
  </div>
</a>
